ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB138:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** UART_HandleTypeDef huart2;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** static void MX_GPIO_Init(void);
  55:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  56:Core/Src/main.c **** static void MX_SPI2_Init(void);
  57:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  58:Core/Src/main.c **** volatile uint8_t buttonPressed = 0;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /**
  68:Core/Src/main.c ****   * @brief  The application entry point.
  69:Core/Src/main.c ****   * @retval int
  70:Core/Src/main.c ****   */
  71:Core/Src/main.c **** int main(void)
  72:Core/Src/main.c **** {
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END 1 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Core/Src/main.c ****   HAL_Init();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Configure the system clock */
  88:Core/Src/main.c ****   SystemClock_Config();
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Initialize all configured peripherals */
  95:Core/Src/main.c ****   MX_GPIO_Init();
  96:Core/Src/main.c ****   MX_USART2_UART_Init();
  97:Core/Src/main.c ****   MX_SPI2_Init();
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  99:Core/Src/main.c ****     uint8_t requestCommand = 0xA5; // Command to request data
 100:Core/Src/main.c ****     uint8_t receivedData[2] = {0}; // To store 2-byte analog value
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END 2 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Infinite loop */
 105:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 106:Core/Src/main.c ****   while (1)
 107:Core/Src/main.c ****   {
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****     if (buttonPressed) {
 110:Core/Src/main.c ****     buttonPressed = 0;
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****     // Send request command and receive response
 113:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET); // NSS Low
 114:Core/Src/main.c ****     HAL_SPI_Transmit(&hspi2, &requestCommand, 1, HAL_MAX_DELAY); // Request analog value
 115:Core/Src/main.c ****     HAL_SPI_Receive(&hspi2, receivedData, 2, HAL_MAX_DELAY);     // Read response
 116:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_SET);         // NSS High
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****     // Combine the two bytes into a 16-bit value
 119:Core/Src/main.c ****     uint16_t analogValue = (receivedData[0] << 8) | receivedData[1];
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****     // Send the value via UART
 122:Core/Src/main.c ****     char msg[50];
 123:Core/Src/main.c ****     snprintf(msg, sizeof(msg), "Analog Value: %u\r\n", analogValue);
 124:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg, strlen(msg), HAL_MAX_DELAY);
 125:Core/Src/main.c ****     }
 126:Core/Src/main.c ****     /* USER CODE END WHILE */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 129:Core/Src/main.c ****   }
 130:Core/Src/main.c ****   /* USER CODE END 3 */
 131:Core/Src/main.c **** }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** /**
 134:Core/Src/main.c ****   * @brief System Clock Configuration
 135:Core/Src/main.c ****   * @retval None
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c **** void SystemClock_Config(void)
 138:Core/Src/main.c **** {
 139:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 143:Core/Src/main.c ****   */
 144:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 145:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 148:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 159:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 160:Core/Src/main.c ****   {
 161:Core/Src/main.c ****     Error_Handler();
 162:Core/Src/main.c ****   }
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 165:Core/Src/main.c ****   */
 166:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 167:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 174:Core/Src/main.c ****   {
 175:Core/Src/main.c ****     Error_Handler();
 176:Core/Src/main.c ****   }
 177:Core/Src/main.c **** }
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /**
 180:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 181:Core/Src/main.c ****   * @param None
 182:Core/Src/main.c ****   * @retval None
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c **** static void MX_SPI2_Init(void)
 185:Core/Src/main.c **** {
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 194:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 195:Core/Src/main.c ****   hspi2.Instance = SPI2;
 196:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 197:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 198:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 199:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 200:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 201:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 202:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 5


 203:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 204:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 205:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 206:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 207:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 208:Core/Src/main.c ****   {
 209:Core/Src/main.c ****     Error_Handler();
 210:Core/Src/main.c ****   }
 211:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /**
 218:Core/Src/main.c ****   * @brief USART2 Initialization Function
 219:Core/Src/main.c ****   * @param None
 220:Core/Src/main.c ****   * @retval None
 221:Core/Src/main.c ****   */
 222:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 223:Core/Src/main.c **** {
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 232:Core/Src/main.c ****   huart2.Instance = USART2;
 233:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 234:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 235:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 236:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 237:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 238:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 239:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 240:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 241:Core/Src/main.c ****   {
 242:Core/Src/main.c ****     Error_Handler();
 243:Core/Src/main.c ****   }
 244:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** }
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** /**
 251:Core/Src/main.c ****   * @brief GPIO Initialization Function
 252:Core/Src/main.c ****   * @param None
 253:Core/Src/main.c ****   * @retval None
 254:Core/Src/main.c ****   */
 255:Core/Src/main.c **** static void MX_GPIO_Init(void)
 256:Core/Src/main.c **** {
  28              		.loc 1 256 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 6


  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 4, -24
  36              		.cfi_offset 5, -20
  37              		.cfi_offset 6, -16
  38              		.cfi_offset 7, -12
  39              		.cfi_offset 8, -8
  40              		.cfi_offset 14, -4
  41 0004 8AB0     		sub	sp, sp, #40
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 64
 257:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  44              		.loc 1 257 3 view .LVU1
  45              		.loc 1 257 20 is_stmt 0 view .LVU2
  46 0006 0024     		movs	r4, #0
  47 0008 0594     		str	r4, [sp, #20]
  48 000a 0694     		str	r4, [sp, #24]
  49 000c 0794     		str	r4, [sp, #28]
  50 000e 0894     		str	r4, [sp, #32]
  51 0010 0994     		str	r4, [sp, #36]
 258:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 259:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 262:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  52              		.loc 1 262 3 is_stmt 1 view .LVU3
  53              	.LBB4:
  54              		.loc 1 262 3 view .LVU4
  55 0012 0194     		str	r4, [sp, #4]
  56              		.loc 1 262 3 view .LVU5
  57 0014 2F4B     		ldr	r3, .L3
  58 0016 1A6B     		ldr	r2, [r3, #48]
  59 0018 42F00402 		orr	r2, r2, #4
  60 001c 1A63     		str	r2, [r3, #48]
  61              		.loc 1 262 3 view .LVU6
  62 001e 1A6B     		ldr	r2, [r3, #48]
  63 0020 02F00402 		and	r2, r2, #4
  64 0024 0192     		str	r2, [sp, #4]
  65              		.loc 1 262 3 view .LVU7
  66 0026 019A     		ldr	r2, [sp, #4]
  67              	.LBE4:
  68              		.loc 1 262 3 view .LVU8
 263:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  69              		.loc 1 263 3 view .LVU9
  70              	.LBB5:
  71              		.loc 1 263 3 view .LVU10
  72 0028 0294     		str	r4, [sp, #8]
  73              		.loc 1 263 3 view .LVU11
  74 002a 1A6B     		ldr	r2, [r3, #48]
  75 002c 42F08002 		orr	r2, r2, #128
  76 0030 1A63     		str	r2, [r3, #48]
  77              		.loc 1 263 3 view .LVU12
  78 0032 1A6B     		ldr	r2, [r3, #48]
  79 0034 02F08002 		and	r2, r2, #128
  80 0038 0292     		str	r2, [sp, #8]
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 7


  81              		.loc 1 263 3 view .LVU13
  82 003a 029A     		ldr	r2, [sp, #8]
  83              	.LBE5:
  84              		.loc 1 263 3 view .LVU14
 264:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  85              		.loc 1 264 3 view .LVU15
  86              	.LBB6:
  87              		.loc 1 264 3 view .LVU16
  88 003c 0394     		str	r4, [sp, #12]
  89              		.loc 1 264 3 view .LVU17
  90 003e 1A6B     		ldr	r2, [r3, #48]
  91 0040 42F00102 		orr	r2, r2, #1
  92 0044 1A63     		str	r2, [r3, #48]
  93              		.loc 1 264 3 view .LVU18
  94 0046 1A6B     		ldr	r2, [r3, #48]
  95 0048 02F00102 		and	r2, r2, #1
  96 004c 0392     		str	r2, [sp, #12]
  97              		.loc 1 264 3 view .LVU19
  98 004e 039A     		ldr	r2, [sp, #12]
  99              	.LBE6:
 100              		.loc 1 264 3 view .LVU20
 265:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 101              		.loc 1 265 3 view .LVU21
 102              	.LBB7:
 103              		.loc 1 265 3 view .LVU22
 104 0050 0494     		str	r4, [sp, #16]
 105              		.loc 1 265 3 view .LVU23
 106 0052 1A6B     		ldr	r2, [r3, #48]
 107 0054 42F00202 		orr	r2, r2, #2
 108 0058 1A63     		str	r2, [r3, #48]
 109              		.loc 1 265 3 view .LVU24
 110 005a 1B6B     		ldr	r3, [r3, #48]
 111 005c 03F00203 		and	r3, r3, #2
 112 0060 0493     		str	r3, [sp, #16]
 113              		.loc 1 265 3 view .LVU25
 114 0062 049B     		ldr	r3, [sp, #16]
 115              	.LBE7:
 116              		.loc 1 265 3 view .LVU26
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 268:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 117              		.loc 1 268 3 view .LVU27
 118 0064 DFF87880 		ldr	r8, .L3+12
 119 0068 2246     		mov	r2, r4
 120 006a 2021     		movs	r1, #32
 121 006c 4046     		mov	r0, r8
 122 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 123              	.LVL0:
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 271:Core/Src/main.c ****   HAL_GPIO_WritePin(NSS_GPIO_Port, NSS_Pin, GPIO_PIN_RESET);
 124              		.loc 1 271 3 view .LVU28
 125 0072 194D     		ldr	r5, .L3+4
 126 0074 2246     		mov	r2, r4
 127 0076 4FF48051 		mov	r1, #4096
 128 007a 2846     		mov	r0, r5
 129 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 8


 130              	.LVL1:
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 274:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 131              		.loc 1 274 3 view .LVU29
 132              		.loc 1 274 23 is_stmt 0 view .LVU30
 133 0080 4FF40053 		mov	r3, #8192
 134 0084 0593     		str	r3, [sp, #20]
 275:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 135              		.loc 1 275 3 is_stmt 1 view .LVU31
 136              		.loc 1 275 24 is_stmt 0 view .LVU32
 137 0086 4FF40413 		mov	r3, #2162688
 138 008a 0693     		str	r3, [sp, #24]
 276:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 139              		.loc 1 276 3 is_stmt 1 view .LVU33
 140              		.loc 1 276 24 is_stmt 0 view .LVU34
 141 008c 0794     		str	r4, [sp, #28]
 277:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 142              		.loc 1 277 3 is_stmt 1 view .LVU35
 143 008e 05A9     		add	r1, sp, #20
 144 0090 1248     		ldr	r0, .L3+8
 145 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL2:
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 280:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 147              		.loc 1 280 3 view .LVU36
 148              		.loc 1 280 23 is_stmt 0 view .LVU37
 149 0096 2026     		movs	r6, #32
 150 0098 0596     		str	r6, [sp, #20]
 281:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 151              		.loc 1 281 3 is_stmt 1 view .LVU38
 152              		.loc 1 281 24 is_stmt 0 view .LVU39
 153 009a 0127     		movs	r7, #1
 154 009c 0697     		str	r7, [sp, #24]
 282:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 155              		.loc 1 282 3 is_stmt 1 view .LVU40
 156              		.loc 1 282 24 is_stmt 0 view .LVU41
 157 009e 0794     		str	r4, [sp, #28]
 283:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 158              		.loc 1 283 3 is_stmt 1 view .LVU42
 159              		.loc 1 283 25 is_stmt 0 view .LVU43
 160 00a0 0894     		str	r4, [sp, #32]
 284:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 161              		.loc 1 284 3 is_stmt 1 view .LVU44
 162 00a2 05A9     		add	r1, sp, #20
 163 00a4 4046     		mov	r0, r8
 164 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 165              	.LVL3:
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /*Configure GPIO pin : NSS_Pin */
 287:Core/Src/main.c ****   GPIO_InitStruct.Pin = NSS_Pin;
 166              		.loc 1 287 3 view .LVU45
 167              		.loc 1 287 23 is_stmt 0 view .LVU46
 168 00aa 4FF48053 		mov	r3, #4096
 169 00ae 0593     		str	r3, [sp, #20]
 288:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 9


 170              		.loc 1 288 3 is_stmt 1 view .LVU47
 171              		.loc 1 288 24 is_stmt 0 view .LVU48
 172 00b0 0697     		str	r7, [sp, #24]
 289:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 173              		.loc 1 289 3 is_stmt 1 view .LVU49
 174              		.loc 1 289 24 is_stmt 0 view .LVU50
 175 00b2 0794     		str	r4, [sp, #28]
 290:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 176              		.loc 1 290 3 is_stmt 1 view .LVU51
 177              		.loc 1 290 25 is_stmt 0 view .LVU52
 178 00b4 0894     		str	r4, [sp, #32]
 291:Core/Src/main.c ****   HAL_GPIO_Init(NSS_GPIO_Port, &GPIO_InitStruct);
 179              		.loc 1 291 3 is_stmt 1 view .LVU53
 180 00b6 05A9     		add	r1, sp, #20
 181 00b8 2846     		mov	r0, r5
 182 00ba FFF7FEFF 		bl	HAL_GPIO_Init
 183              	.LVL4:
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /*Configure GPIO pin : DIO_RFM_Pin */
 294:Core/Src/main.c ****   GPIO_InitStruct.Pin = DIO_RFM_Pin;
 184              		.loc 1 294 3 view .LVU54
 185              		.loc 1 294 23 is_stmt 0 view .LVU55
 186 00be 0596     		str	r6, [sp, #20]
 295:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 187              		.loc 1 295 3 is_stmt 1 view .LVU56
 188              		.loc 1 295 24 is_stmt 0 view .LVU57
 189 00c0 0694     		str	r4, [sp, #24]
 296:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 190              		.loc 1 296 3 is_stmt 1 view .LVU58
 191              		.loc 1 296 24 is_stmt 0 view .LVU59
 192 00c2 0794     		str	r4, [sp, #28]
 297:Core/Src/main.c ****   HAL_GPIO_Init(DIO_RFM_GPIO_Port, &GPIO_InitStruct);
 193              		.loc 1 297 3 is_stmt 1 view .LVU60
 194 00c4 05A9     		add	r1, sp, #20
 195 00c6 2846     		mov	r0, r5
 196 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL5:
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 300:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 301:Core/Src/main.c **** }
 198              		.loc 1 301 1 is_stmt 0 view .LVU61
 199 00cc 0AB0     		add	sp, sp, #40
 200              	.LCFI2:
 201              		.cfi_def_cfa_offset 24
 202              		@ sp needed
 203 00ce BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 204              	.L4:
 205 00d2 00BF     		.align	2
 206              	.L3:
 207 00d4 00380240 		.word	1073887232
 208 00d8 00040240 		.word	1073873920
 209 00dc 00080240 		.word	1073874944
 210 00e0 00000240 		.word	1073872896
 211              		.cfi_endproc
 212              	.LFE138:
 214              		.section	.text.Error_Handler,"ax",%progbits
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 10


 215              		.align	1
 216              		.global	Error_Handler
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	Error_Handler:
 222              	.LFB139:
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** /* USER CODE END 4 */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c **** /**
 308:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 309:Core/Src/main.c ****   * @retval None
 310:Core/Src/main.c ****   */
 311:Core/Src/main.c **** void Error_Handler(void)
 312:Core/Src/main.c **** {
 223              		.loc 1 312 1 is_stmt 1 view -0
 224              		.cfi_startproc
 225              		@ Volatile: function does not return.
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 313:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 314:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 315:Core/Src/main.c ****   __disable_irq();
 229              		.loc 1 315 3 view .LVU63
 230              	.LBB8:
 231              	.LBI8:
 232              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 11


  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 12


  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 13


 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 14


 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 15


 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 16


 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 17


 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 18


 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 19


 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 20


 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 21


 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 22


 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 23


 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 24


 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 25


 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 26


 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 27


 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 233              		.loc 2 960 27 view .LVU64
 234              	.LBB9:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 235              		.loc 2 962 3 view .LVU65
 236              		.syntax unified
 237              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 238 0000 72B6     		cpsid i
 239              	@ 0 "" 2
 240              		.thumb
 241              		.syntax unified
 242              	.L6:
 243              	.LBE9:
 244              	.LBE8:
 316:Core/Src/main.c ****   while (1)
 245              		.loc 1 316 3 discriminator 1 view .LVU66
 317:Core/Src/main.c ****   {
 318:Core/Src/main.c ****   }
 246              		.loc 1 318 3 discriminator 1 view .LVU67
 316:Core/Src/main.c ****   while (1)
 247              		.loc 1 316 9 discriminator 1 view .LVU68
 248 0002 FEE7     		b	.L6
 249              		.cfi_endproc
 250              	.LFE139:
 252              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 253              		.align	1
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 258              	MX_USART2_UART_Init:
 259              	.LFB137:
 223:Core/Src/main.c **** 
 260              		.loc 1 223 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 28


 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 08B5     		push	{r3, lr}
 265              	.LCFI3:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 3, -8
 268              		.cfi_offset 14, -4
 232:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 269              		.loc 1 232 3 view .LVU70
 232:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 270              		.loc 1 232 19 is_stmt 0 view .LVU71
 271 0002 0A48     		ldr	r0, .L11
 272 0004 0A4B     		ldr	r3, .L11+4
 273 0006 0360     		str	r3, [r0]
 233:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 274              		.loc 1 233 3 is_stmt 1 view .LVU72
 233:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 275              		.loc 1 233 24 is_stmt 0 view .LVU73
 276 0008 4FF4E133 		mov	r3, #115200
 277 000c 4360     		str	r3, [r0, #4]
 234:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 278              		.loc 1 234 3 is_stmt 1 view .LVU74
 234:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 279              		.loc 1 234 26 is_stmt 0 view .LVU75
 280 000e 0023     		movs	r3, #0
 281 0010 8360     		str	r3, [r0, #8]
 235:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 282              		.loc 1 235 3 is_stmt 1 view .LVU76
 235:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 283              		.loc 1 235 24 is_stmt 0 view .LVU77
 284 0012 C360     		str	r3, [r0, #12]
 236:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 285              		.loc 1 236 3 is_stmt 1 view .LVU78
 236:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 286              		.loc 1 236 22 is_stmt 0 view .LVU79
 287 0014 0361     		str	r3, [r0, #16]
 237:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 288              		.loc 1 237 3 is_stmt 1 view .LVU80
 237:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 289              		.loc 1 237 20 is_stmt 0 view .LVU81
 290 0016 0C22     		movs	r2, #12
 291 0018 4261     		str	r2, [r0, #20]
 238:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 292              		.loc 1 238 3 is_stmt 1 view .LVU82
 238:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 293              		.loc 1 238 25 is_stmt 0 view .LVU83
 294 001a 8361     		str	r3, [r0, #24]
 239:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 295              		.loc 1 239 3 is_stmt 1 view .LVU84
 239:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 296              		.loc 1 239 28 is_stmt 0 view .LVU85
 297 001c C361     		str	r3, [r0, #28]
 240:Core/Src/main.c ****   {
 298              		.loc 1 240 3 is_stmt 1 view .LVU86
 240:Core/Src/main.c ****   {
 299              		.loc 1 240 7 is_stmt 0 view .LVU87
 300 001e FFF7FEFF 		bl	HAL_UART_Init
 301              	.LVL6:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 29


 240:Core/Src/main.c ****   {
 302              		.loc 1 240 6 view .LVU88
 303 0022 00B9     		cbnz	r0, .L10
 248:Core/Src/main.c **** 
 304              		.loc 1 248 1 view .LVU89
 305 0024 08BD     		pop	{r3, pc}
 306              	.L10:
 242:Core/Src/main.c ****   }
 307              		.loc 1 242 5 is_stmt 1 view .LVU90
 308 0026 FFF7FEFF 		bl	Error_Handler
 309              	.LVL7:
 310              	.L12:
 311 002a 00BF     		.align	2
 312              	.L11:
 313 002c 00000000 		.word	.LANCHOR0
 314 0030 00440040 		.word	1073759232
 315              		.cfi_endproc
 316              	.LFE137:
 318              		.section	.text.MX_SPI2_Init,"ax",%progbits
 319              		.align	1
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 324              	MX_SPI2_Init:
 325              	.LFB136:
 185:Core/Src/main.c **** 
 326              		.loc 1 185 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330 0000 08B5     		push	{r3, lr}
 331              	.LCFI4:
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 3, -8
 334              		.cfi_offset 14, -4
 195:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 335              		.loc 1 195 3 view .LVU92
 195:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 336              		.loc 1 195 18 is_stmt 0 view .LVU93
 337 0002 0D48     		ldr	r0, .L17
 338 0004 0D4B     		ldr	r3, .L17+4
 339 0006 0360     		str	r3, [r0]
 196:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 340              		.loc 1 196 3 is_stmt 1 view .LVU94
 196:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 341              		.loc 1 196 19 is_stmt 0 view .LVU95
 342 0008 4FF48273 		mov	r3, #260
 343 000c 4360     		str	r3, [r0, #4]
 197:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 344              		.loc 1 197 3 is_stmt 1 view .LVU96
 197:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 345              		.loc 1 197 24 is_stmt 0 view .LVU97
 346 000e 0023     		movs	r3, #0
 347 0010 8360     		str	r3, [r0, #8]
 198:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 348              		.loc 1 198 3 is_stmt 1 view .LVU98
 198:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 30


 349              		.loc 1 198 23 is_stmt 0 view .LVU99
 350 0012 C360     		str	r3, [r0, #12]
 199:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 351              		.loc 1 199 3 is_stmt 1 view .LVU100
 199:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 352              		.loc 1 199 26 is_stmt 0 view .LVU101
 353 0014 0361     		str	r3, [r0, #16]
 200:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 354              		.loc 1 200 3 is_stmt 1 view .LVU102
 200:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 355              		.loc 1 200 23 is_stmt 0 view .LVU103
 356 0016 4361     		str	r3, [r0, #20]
 201:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 357              		.loc 1 201 3 is_stmt 1 view .LVU104
 201:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 358              		.loc 1 201 18 is_stmt 0 view .LVU105
 359 0018 4FF40072 		mov	r2, #512
 360 001c 8261     		str	r2, [r0, #24]
 202:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 361              		.loc 1 202 3 is_stmt 1 view .LVU106
 202:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 362              		.loc 1 202 32 is_stmt 0 view .LVU107
 363 001e C361     		str	r3, [r0, #28]
 203:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 364              		.loc 1 203 3 is_stmt 1 view .LVU108
 203:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 365              		.loc 1 203 23 is_stmt 0 view .LVU109
 366 0020 0362     		str	r3, [r0, #32]
 204:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 367              		.loc 1 204 3 is_stmt 1 view .LVU110
 204:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 368              		.loc 1 204 21 is_stmt 0 view .LVU111
 369 0022 4362     		str	r3, [r0, #36]
 205:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 370              		.loc 1 205 3 is_stmt 1 view .LVU112
 205:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 371              		.loc 1 205 29 is_stmt 0 view .LVU113
 372 0024 8362     		str	r3, [r0, #40]
 206:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 373              		.loc 1 206 3 is_stmt 1 view .LVU114
 206:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 374              		.loc 1 206 28 is_stmt 0 view .LVU115
 375 0026 0A23     		movs	r3, #10
 376 0028 C362     		str	r3, [r0, #44]
 207:Core/Src/main.c ****   {
 377              		.loc 1 207 3 is_stmt 1 view .LVU116
 207:Core/Src/main.c ****   {
 378              		.loc 1 207 7 is_stmt 0 view .LVU117
 379 002a FFF7FEFF 		bl	HAL_SPI_Init
 380              	.LVL8:
 207:Core/Src/main.c ****   {
 381              		.loc 1 207 6 view .LVU118
 382 002e 00B9     		cbnz	r0, .L16
 215:Core/Src/main.c **** 
 383              		.loc 1 215 1 view .LVU119
 384 0030 08BD     		pop	{r3, pc}
 385              	.L16:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 31


 209:Core/Src/main.c ****   }
 386              		.loc 1 209 5 is_stmt 1 view .LVU120
 387 0032 FFF7FEFF 		bl	Error_Handler
 388              	.LVL9:
 389              	.L18:
 390 0036 00BF     		.align	2
 391              	.L17:
 392 0038 00000000 		.word	.LANCHOR1
 393 003c 00380040 		.word	1073756160
 394              		.cfi_endproc
 395              	.LFE136:
 397              		.section	.text.SystemClock_Config,"ax",%progbits
 398              		.align	1
 399              		.global	SystemClock_Config
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 404              	SystemClock_Config:
 405              	.LFB135:
 138:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 406              		.loc 1 138 1 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 80
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410 0000 00B5     		push	{lr}
 411              	.LCFI5:
 412              		.cfi_def_cfa_offset 4
 413              		.cfi_offset 14, -4
 414 0002 95B0     		sub	sp, sp, #84
 415              	.LCFI6:
 416              		.cfi_def_cfa_offset 88
 139:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 417              		.loc 1 139 3 view .LVU122
 139:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 418              		.loc 1 139 22 is_stmt 0 view .LVU123
 419 0004 3022     		movs	r2, #48
 420 0006 0021     		movs	r1, #0
 421 0008 08A8     		add	r0, sp, #32
 422 000a FFF7FEFF 		bl	memset
 423              	.LVL10:
 140:Core/Src/main.c **** 
 424              		.loc 1 140 3 is_stmt 1 view .LVU124
 140:Core/Src/main.c **** 
 425              		.loc 1 140 22 is_stmt 0 view .LVU125
 426 000e 0023     		movs	r3, #0
 427 0010 0393     		str	r3, [sp, #12]
 428 0012 0493     		str	r3, [sp, #16]
 429 0014 0593     		str	r3, [sp, #20]
 430 0016 0693     		str	r3, [sp, #24]
 431 0018 0793     		str	r3, [sp, #28]
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 432              		.loc 1 144 3 is_stmt 1 view .LVU126
 433              	.LBB10:
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 434              		.loc 1 144 3 view .LVU127
 435 001a 0193     		str	r3, [sp, #4]
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 32


 436              		.loc 1 144 3 view .LVU128
 437 001c 1E4A     		ldr	r2, .L25
 438 001e 116C     		ldr	r1, [r2, #64]
 439 0020 41F08051 		orr	r1, r1, #268435456
 440 0024 1164     		str	r1, [r2, #64]
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 441              		.loc 1 144 3 view .LVU129
 442 0026 126C     		ldr	r2, [r2, #64]
 443 0028 02F08052 		and	r2, r2, #268435456
 444 002c 0192     		str	r2, [sp, #4]
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 445              		.loc 1 144 3 view .LVU130
 446 002e 019A     		ldr	r2, [sp, #4]
 447              	.LBE10:
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 448              		.loc 1 144 3 view .LVU131
 145:Core/Src/main.c **** 
 449              		.loc 1 145 3 view .LVU132
 450              	.LBB11:
 145:Core/Src/main.c **** 
 451              		.loc 1 145 3 view .LVU133
 452 0030 0293     		str	r3, [sp, #8]
 145:Core/Src/main.c **** 
 453              		.loc 1 145 3 view .LVU134
 454 0032 1A4A     		ldr	r2, .L25+4
 455 0034 1168     		ldr	r1, [r2]
 456 0036 41F44041 		orr	r1, r1, #49152
 457 003a 1160     		str	r1, [r2]
 145:Core/Src/main.c **** 
 458              		.loc 1 145 3 view .LVU135
 459 003c 1268     		ldr	r2, [r2]
 460 003e 02F44042 		and	r2, r2, #49152
 461 0042 0292     		str	r2, [sp, #8]
 145:Core/Src/main.c **** 
 462              		.loc 1 145 3 view .LVU136
 463 0044 029A     		ldr	r2, [sp, #8]
 464              	.LBE11:
 145:Core/Src/main.c **** 
 465              		.loc 1 145 3 view .LVU137
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 466              		.loc 1 150 3 view .LVU138
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 467              		.loc 1 150 36 is_stmt 0 view .LVU139
 468 0046 0221     		movs	r1, #2
 469 0048 0891     		str	r1, [sp, #32]
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 470              		.loc 1 151 3 is_stmt 1 view .LVU140
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 471              		.loc 1 151 30 is_stmt 0 view .LVU141
 472 004a 0122     		movs	r2, #1
 473 004c 0B92     		str	r2, [sp, #44]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 474              		.loc 1 152 3 is_stmt 1 view .LVU142
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 475              		.loc 1 152 41 is_stmt 0 view .LVU143
 476 004e 1022     		movs	r2, #16
 477 0050 0C92     		str	r2, [sp, #48]
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 33


 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 478              		.loc 1 153 3 is_stmt 1 view .LVU144
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 479              		.loc 1 153 34 is_stmt 0 view .LVU145
 480 0052 0E91     		str	r1, [sp, #56]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 481              		.loc 1 154 3 is_stmt 1 view .LVU146
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 482              		.loc 1 154 35 is_stmt 0 view .LVU147
 483 0054 0F93     		str	r3, [sp, #60]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 484              		.loc 1 155 3 is_stmt 1 view .LVU148
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 485              		.loc 1 155 30 is_stmt 0 view .LVU149
 486 0056 1092     		str	r2, [sp, #64]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 487              		.loc 1 156 3 is_stmt 1 view .LVU150
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 488              		.loc 1 156 30 is_stmt 0 view .LVU151
 489 0058 4FF4A873 		mov	r3, #336
 490 005c 1193     		str	r3, [sp, #68]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 491              		.loc 1 157 3 is_stmt 1 view .LVU152
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 492              		.loc 1 157 30 is_stmt 0 view .LVU153
 493 005e 0423     		movs	r3, #4
 494 0060 1293     		str	r3, [sp, #72]
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 495              		.loc 1 158 3 is_stmt 1 view .LVU154
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 496              		.loc 1 158 30 is_stmt 0 view .LVU155
 497 0062 1393     		str	r3, [sp, #76]
 159:Core/Src/main.c ****   {
 498              		.loc 1 159 3 is_stmt 1 view .LVU156
 159:Core/Src/main.c ****   {
 499              		.loc 1 159 7 is_stmt 0 view .LVU157
 500 0064 08A8     		add	r0, sp, #32
 501 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 502              	.LVL11:
 159:Core/Src/main.c ****   {
 503              		.loc 1 159 6 view .LVU158
 504 006a 80B9     		cbnz	r0, .L23
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 505              		.loc 1 166 3 is_stmt 1 view .LVU159
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 506              		.loc 1 166 31 is_stmt 0 view .LVU160
 507 006c 0F23     		movs	r3, #15
 508 006e 0393     		str	r3, [sp, #12]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 509              		.loc 1 168 3 is_stmt 1 view .LVU161
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 510              		.loc 1 168 34 is_stmt 0 view .LVU162
 511 0070 0221     		movs	r1, #2
 512 0072 0491     		str	r1, [sp, #16]
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 513              		.loc 1 169 3 is_stmt 1 view .LVU163
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 34


 514              		.loc 1 169 35 is_stmt 0 view .LVU164
 515 0074 0023     		movs	r3, #0
 516 0076 0593     		str	r3, [sp, #20]
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 517              		.loc 1 170 3 is_stmt 1 view .LVU165
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 518              		.loc 1 170 36 is_stmt 0 view .LVU166
 519 0078 4FF48052 		mov	r2, #4096
 520 007c 0692     		str	r2, [sp, #24]
 171:Core/Src/main.c **** 
 521              		.loc 1 171 3 is_stmt 1 view .LVU167
 171:Core/Src/main.c **** 
 522              		.loc 1 171 36 is_stmt 0 view .LVU168
 523 007e 0793     		str	r3, [sp, #28]
 173:Core/Src/main.c ****   {
 524              		.loc 1 173 3 is_stmt 1 view .LVU169
 173:Core/Src/main.c ****   {
 525              		.loc 1 173 7 is_stmt 0 view .LVU170
 526 0080 03A8     		add	r0, sp, #12
 527 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 528              	.LVL12:
 173:Core/Src/main.c ****   {
 529              		.loc 1 173 6 view .LVU171
 530 0086 20B9     		cbnz	r0, .L24
 177:Core/Src/main.c **** 
 531              		.loc 1 177 1 view .LVU172
 532 0088 15B0     		add	sp, sp, #84
 533              	.LCFI7:
 534              		.cfi_remember_state
 535              		.cfi_def_cfa_offset 4
 536              		@ sp needed
 537 008a 5DF804FB 		ldr	pc, [sp], #4
 538              	.L23:
 539              	.LCFI8:
 540              		.cfi_restore_state
 161:Core/Src/main.c ****   }
 541              		.loc 1 161 5 is_stmt 1 view .LVU173
 542 008e FFF7FEFF 		bl	Error_Handler
 543              	.LVL13:
 544              	.L24:
 175:Core/Src/main.c ****   }
 545              		.loc 1 175 5 view .LVU174
 546 0092 FFF7FEFF 		bl	Error_Handler
 547              	.LVL14:
 548              	.L26:
 549 0096 00BF     		.align	2
 550              	.L25:
 551 0098 00380240 		.word	1073887232
 552 009c 00700040 		.word	1073770496
 553              		.cfi_endproc
 554              	.LFE135:
 556              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 557              		.align	2
 558              	.LC0:
 559 0000 416E616C 		.ascii	"Analog Value: %u\015\012\000"
 559      6F672056 
 559      616C7565 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 35


 559      3A202575 
 559      0D0A00
 560              		.section	.text.main,"ax",%progbits
 561              		.align	1
 562              		.global	main
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
 567              	main:
 568              	.LFB134:
  72:Core/Src/main.c **** 
 569              		.loc 1 72 1 view -0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 56
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573 0000 30B5     		push	{r4, r5, lr}
 574              	.LCFI9:
 575              		.cfi_def_cfa_offset 12
 576              		.cfi_offset 4, -12
 577              		.cfi_offset 5, -8
 578              		.cfi_offset 14, -4
 579 0002 8FB0     		sub	sp, sp, #60
 580              	.LCFI10:
 581              		.cfi_def_cfa_offset 72
  81:Core/Src/main.c **** 
 582              		.loc 1 81 3 view .LVU176
 583 0004 FFF7FEFF 		bl	HAL_Init
 584              	.LVL15:
  88:Core/Src/main.c **** 
 585              		.loc 1 88 3 view .LVU177
 586 0008 FFF7FEFF 		bl	SystemClock_Config
 587              	.LVL16:
  95:Core/Src/main.c ****   MX_USART2_UART_Init();
 588              		.loc 1 95 3 view .LVU178
 589 000c FFF7FEFF 		bl	MX_GPIO_Init
 590              	.LVL17:
  96:Core/Src/main.c ****   MX_SPI2_Init();
 591              		.loc 1 96 3 view .LVU179
 592 0010 FFF7FEFF 		bl	MX_USART2_UART_Init
 593              	.LVL18:
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 594              		.loc 1 97 3 view .LVU180
 595 0014 FFF7FEFF 		bl	MX_SPI2_Init
 596              	.LVL19:
  99:Core/Src/main.c ****     uint8_t receivedData[2] = {0}; // To store 2-byte analog value
 597              		.loc 1 99 5 view .LVU181
  99:Core/Src/main.c ****     uint8_t receivedData[2] = {0}; // To store 2-byte analog value
 598              		.loc 1 99 13 is_stmt 0 view .LVU182
 599 0018 A523     		movs	r3, #165
 600 001a 8DF83730 		strb	r3, [sp, #55]
 100:Core/Src/main.c **** 
 601              		.loc 1 100 5 is_stmt 1 view .LVU183
 100:Core/Src/main.c **** 
 602              		.loc 1 100 13 is_stmt 0 view .LVU184
 603 001e 0023     		movs	r3, #0
 604 0020 ADF83430 		strh	r3, [sp, #52]	@ movhi
 605              	.L28:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 36


 106:Core/Src/main.c ****   {
 606              		.loc 1 106 3 is_stmt 1 view .LVU185
 109:Core/Src/main.c ****     buttonPressed = 0;
 607              		.loc 1 109 5 view .LVU186
 109:Core/Src/main.c ****     buttonPressed = 0;
 608              		.loc 1 109 9 is_stmt 0 view .LVU187
 609 0024 1C4B     		ldr	r3, .L31
 610 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 109:Core/Src/main.c ****     buttonPressed = 0;
 611              		.loc 1 109 8 view .LVU188
 612 0028 002B     		cmp	r3, #0
 613 002a FBD0     		beq	.L28
 614              	.LBB12:
 110:Core/Src/main.c **** 
 615              		.loc 1 110 5 is_stmt 1 view .LVU189
 110:Core/Src/main.c **** 
 616              		.loc 1 110 19 is_stmt 0 view .LVU190
 617 002c 0022     		movs	r2, #0
 618 002e 1A4B     		ldr	r3, .L31
 619 0030 1A70     		strb	r2, [r3]
 113:Core/Src/main.c ****     HAL_SPI_Transmit(&hspi2, &requestCommand, 1, HAL_MAX_DELAY); // Request analog value
 620              		.loc 1 113 5 is_stmt 1 view .LVU191
 621 0032 1A4C     		ldr	r4, .L31+4
 622 0034 4FF48051 		mov	r1, #4096
 623 0038 2046     		mov	r0, r4
 624 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 625              	.LVL20:
 114:Core/Src/main.c ****     HAL_SPI_Receive(&hspi2, receivedData, 2, HAL_MAX_DELAY);     // Read response
 626              		.loc 1 114 5 view .LVU192
 627 003e 184D     		ldr	r5, .L31+8
 628 0040 4FF0FF33 		mov	r3, #-1
 629 0044 0122     		movs	r2, #1
 630 0046 0DF13701 		add	r1, sp, #55
 631 004a 2846     		mov	r0, r5
 632 004c FFF7FEFF 		bl	HAL_SPI_Transmit
 633              	.LVL21:
 115:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_SET);         // NSS High
 634              		.loc 1 115 5 view .LVU193
 635 0050 4FF0FF33 		mov	r3, #-1
 636 0054 0222     		movs	r2, #2
 637 0056 0DA9     		add	r1, sp, #52
 638 0058 2846     		mov	r0, r5
 639 005a FFF7FEFF 		bl	HAL_SPI_Receive
 640              	.LVL22:
 116:Core/Src/main.c **** 
 641              		.loc 1 116 5 view .LVU194
 642 005e 0122     		movs	r2, #1
 643 0060 4FF48051 		mov	r1, #4096
 644 0064 2046     		mov	r0, r4
 645 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 646              	.LVL23:
 119:Core/Src/main.c **** 
 647              		.loc 1 119 5 view .LVU195
 119:Core/Src/main.c **** 
 648              		.loc 1 119 41 is_stmt 0 view .LVU196
 649 006a 9DF83420 		ldrb	r2, [sp, #52]	@ zero_extendqisi2
 119:Core/Src/main.c **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 37


 650              		.loc 1 119 65 view .LVU197
 651 006e 9DF83530 		ldrb	r3, [sp, #53]	@ zero_extendqisi2
 652              	.LVL24:
 122:Core/Src/main.c ****     snprintf(msg, sizeof(msg), "Analog Value: %u\r\n", analogValue);
 653              		.loc 1 122 5 is_stmt 1 view .LVU198
 123:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg, strlen(msg), HAL_MAX_DELAY);
 654              		.loc 1 123 5 view .LVU199
 655 0072 43EA0223 		orr	r3, r3, r2, lsl #8
 656              	.LVL25:
 123:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg, strlen(msg), HAL_MAX_DELAY);
 657              		.loc 1 123 5 is_stmt 0 view .LVU200
 658 0076 0B4A     		ldr	r2, .L31+12
 659 0078 3221     		movs	r1, #50
 660 007a 6846     		mov	r0, sp
 661 007c FFF7FEFF 		bl	snprintf
 662              	.LVL26:
 124:Core/Src/main.c ****     }
 663              		.loc 1 124 5 is_stmt 1 view .LVU201
 124:Core/Src/main.c ****     }
 664              		.loc 1 124 48 is_stmt 0 view .LVU202
 665 0080 6846     		mov	r0, sp
 666 0082 FFF7FEFF 		bl	strlen
 667              	.LVL27:
 124:Core/Src/main.c ****     }
 668              		.loc 1 124 5 view .LVU203
 669 0086 4FF0FF33 		mov	r3, #-1
 670 008a 82B2     		uxth	r2, r0
 671 008c 6946     		mov	r1, sp
 672 008e 0648     		ldr	r0, .L31+16
 673 0090 FFF7FEFF 		bl	HAL_UART_Transmit
 674              	.LVL28:
 675 0094 C6E7     		b	.L28
 676              	.L32:
 677 0096 00BF     		.align	2
 678              	.L31:
 679 0098 00000000 		.word	.LANCHOR2
 680 009c 00040240 		.word	1073873920
 681 00a0 00000000 		.word	.LANCHOR1
 682 00a4 00000000 		.word	.LC0
 683 00a8 00000000 		.word	.LANCHOR0
 684              	.LBE12:
 685              		.cfi_endproc
 686              	.LFE134:
 688              		.global	buttonPressed
 689              		.global	huart2
 690              		.global	hspi2
 691              		.section	.bss.buttonPressed,"aw",%nobits
 692              		.set	.LANCHOR2,. + 0
 695              	buttonPressed:
 696 0000 00       		.space	1
 697              		.section	.bss.hspi2,"aw",%nobits
 698              		.align	2
 699              		.set	.LANCHOR1,. + 0
 702              	hspi2:
 703 0000 00000000 		.space	88
 703      00000000 
 703      00000000 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 38


 703      00000000 
 703      00000000 
 704              		.section	.bss.huart2,"aw",%nobits
 705              		.align	2
 706              		.set	.LANCHOR0,. + 0
 709              	huart2:
 710 0000 00000000 		.space	72
 710      00000000 
 710      00000000 
 710      00000000 
 710      00000000 
 711              		.text
 712              	.Letext0:
 713              		.file 3 "c:\\dev\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default
 714              		.file 4 "c:\\dev\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 715              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 716              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 717              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 718              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 719              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 720              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 721              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 722              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 723              		.file 13 "<built-in>"
 724              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s 			page 39


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:20     .text.MX_GPIO_Init:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:207    .text.MX_GPIO_Init:000000d4 $d
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:215    .text.Error_Handler:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:221    .text.Error_Handler:00000000 Error_Handler
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:253    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:258    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:313    .text.MX_USART2_UART_Init:0000002c $d
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:319    .text.MX_SPI2_Init:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:324    .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:392    .text.MX_SPI2_Init:00000038 $d
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:398    .text.SystemClock_Config:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:404    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:551    .text.SystemClock_Config:00000098 $d
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:557    .rodata.main.str1.4:00000000 $d
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:561    .text.main:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:567    .text.main:00000000 main
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:679    .text.main:00000098 $d
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:695    .bss.buttonPressed:00000000 buttonPressed
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:709    .bss.huart2:00000000 huart2
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:702    .bss.hspi2:00000000 hspi2
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:696    .bss.buttonPressed:00000000 $d
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:698    .bss.hspi2:00000000 $d
C:\Users\tugru\AppData\Local\Temp\ccEGMcC2.s:705    .bss.huart2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_SPI_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_SPI_Transmit
HAL_SPI_Receive
snprintf
strlen
HAL_UART_Transmit
